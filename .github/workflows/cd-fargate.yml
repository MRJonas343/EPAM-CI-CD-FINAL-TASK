name: Deploy to ECS Fargate

on:
  workflow_run:
    workflows: ["CI/CD Pipeline to ECR"]
    types: [completed]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: epam-fargate-cluster
  ECS_SERVICE: bun-app-service
  TASK_DEF_PATH: ecs/task-fargate.json
  CONTAINER_NAME: bun-app
  NAMESPACE: epam-final-task
  CI_APP: bun-app
  TASK_DEF_NAME: bun-app-task

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Descargar artefacto con la versión
        uses: actions/download-artifact@v4
        with:
          name: version-artifact

      - name: Leer versión desde el archivo
        run: |
          VERSION=$(cat version.txt)
          IMAGE_URI="${{ secrets.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.CI_APP }}:${VERSION}"
          echo "Usando imagen: $IMAGE_URI"


      - name: Get current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_DEF_NAME }} \
            --query 'taskDefinition' > current-task.json || true

      - name: Build new task JSON (replace image)
        run: |
          IMAGE_URI="${{ secrets.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.CI_APP }}:${VERSION}"
          echo "Using image: $IMAGE_URI"
          jq --arg IMAGE "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE' ecs/ecs-task-fargate.json > new-task.json

      - name: Register new task definition
        id: register
        run: |
          arn=$(aws ecs register-task-definition --cli-input-json file://new-task.json --query "taskDefinition.taskDefinitionArn" --output text)
          echo "TASK_DEF_ARN=$arn" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --task-definition $TASK_DEF_ARN
